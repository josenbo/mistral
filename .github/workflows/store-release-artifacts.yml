name: Store Release Artifacts

on:
  release:
    types:
      - published

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal

  create_artifacts:
    strategy:
      matrix:
        runtime: [linux-x64, linux-arm64, win-x64, win-x86, osx-x64, osx-arm64]
    needs: build_and_test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Build ${{ matrix.runtime }}
      run: |
        export SRA9_OUTPUT_PATH="$RUNNER_TEMP/build/linux-x64"
        echo "SRA9_OUTPUT_PATH=$SRA9_OUTPUT_PATH" >> "$GITHUB_ENV"
        mkdir -p "$SRA9_OUTPUT_PATH"
        dotnet build ./vigo/vigo.csproj --configuration Release --runtime ${{ matrix.runtime }} --no-self-contained --output "$SRA9_OUTPUT_PATH"
        ls -al "$SRA9_OUTPUT_PATH"
        if [ -f "$SRA9_OUTPUT_PATH/vigo.dll" ]; then
          export SRA9_OUTPUT_AVAILABLE="OK"
          echo "SRA9_OUTPUT_AVAILABLE=$SRA9_OUTPUT_AVAILABLE" >> "$GITHUB_ENV"
        fi
    - name: Upload ${{ matrix.runtime }}
      if: ${{ env.SRA9_OUTPUT_AVAILABLE == 'OK' }}
      uses: actions/upload-artifact@v4
      with:
        name: vigo.${{ matrix.runtime }}
        path: ${{ env.SRA9_OUTPUT_PATH }}

