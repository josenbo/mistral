name: Store Release Artifacts

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal

  create_artifacts:
    strategy:
      matrix:
        runtime: [linux-x64, linux-arm64, win-x64, win-x86, osx-x64, osx-arm64]
    needs: build_and_test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Build ${{ matrix.runtime }}
      id: build-artifact
      env:
        BUNDLE_SUFFIX: ${{ startsWith(matrix.runtime, 'win') && 'zip' || 'tar.gz' }}
      run: |
        export BUILD_OUTPUT_PATH="$RUNNER_TEMP/build/${{ matrix.runtime }}"
        export BUNDLE_PATH="$RUNNER_TEMP/build/${{ matrix.runtime }}.$BUNDLE_SUFFIX"
        echo "BUNDLE_PATH=$BUNDLE_PATH" >> "$GITHUB_OUTPUT"

        mkdir -p "$BUILD_OUTPUT_PATH"
        dotnet build ./vigo/vigo.csproj --configuration Release --runtime ${{ matrix.runtime }} --no-self-contained --output "$BUILD_OUTPUT_PATH"

        if [ "$BUNDLE_SUFFIX" == "zip" ]; then
          zip -j "$BUNDLE_PATH" "$BUILD_OUTPUT_PATH/*"
        else
          tar -cvf "$BUNDLE_PATH" "$BUILD_OUTPUT_PATH/*"
        fi
    - name: Upload ${{ matrix.runtime }}
      uses: softprops/action-gh-release@v2
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: ${{ steps.build-artifact.outputs.BUNDLE_PATH }}

